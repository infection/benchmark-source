<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="DataTransformer24.php" path="/AutoGenerated/DataTransformer">
    <totals>
      <lines total="591" comments="197" code="394" executable="134" executed="133" percent="99.25"/>
      <methods count="41" tested="40" percent="97.56"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Infection\BenchmarkSource\AutoGenerated\DataTransformer\DataTransformer24" start="32" executable="134" executed="133" crap="69">
      <namespace name="Infection\BenchmarkSource\AutoGenerated\DataTransformer"/>
      <method name="filter" signature="filter(array $array, callable $predicate): array" start="40" end="43" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="map" signature="map(array $array, callable $callback): array" start="52" end="55" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="reduce" signature="reduce(array $array, callable $callback, mixed $initial): mixed" start="65" end="68" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="unique" signature="unique(array $array): array" start="75" end="78" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="reverse" signature="reverse(array $array): array" start="85" end="88" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="flatten" signature="flatten(array $array, int $depth): array" start="93" end="122" crap="6.01" executable="17" executed="16" coverage="94.117647058824"/>
      <method name="chunk" signature="chunk(array $array, int $size): array" start="129" end="141" crap="2" executable="8" executed="8" coverage="100"/>
      <method name="slice" signature="slice(array $array, int $offset, ?int $length): array" start="148" end="151" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="merge" signature="merge(array $arrays): array" start="158" end="161" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="diff" signature="diff(array $array1, array $array2): array" start="169" end="172" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="intersect" signature="intersect(array $array1, array $array2): array" start="180" end="183" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="keys" signature="keys(array $array): array" start="189" end="192" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="values" signature="values(array $array): array" start="199" end="202" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="combine" signature="combine(array $keys, array $values): array" start="209" end="226" crap="3" executable="11" executed="11" coverage="100"/>
      <method name="flip" signature="flip(array $array): array" start="232" end="235" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="has" signature="has(array $array, string|int $key): bool" start="240" end="243" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="contains" signature="contains(array $array, mixed $value): bool" start="250" end="253" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="get" signature="get(array $array, string|int $key, mixed $default): mixed" start="258" end="261" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="set" signature="set(array $array, string|int $key, mixed $value): array" start="267" end="272" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="remove" signature="remove(array $array, string|int $key): array" start="278" end="283" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="pluck" signature="pluck(array $array, string|int $column): array" start="288" end="291" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="sort" signature="sort(array $array, callable $comparator): array" start="299" end="304" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="sortAscending" signature="sortAscending(array $array): array" start="311" end="316" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="sortDescending" signature="sortDescending(array $array): array" start="323" end="328" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="sortByKeys" signature="sortByKeys(array $array): array" start="334" end="339" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="every" signature="every(array $array, callable $predicate): bool" start="346" end="355" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="some" signature="some(array $array, callable $predicate): bool" start="362" end="371" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="find" signature="find(array $array, callable $predicate): mixed" start="378" end="387" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="findIndex" signature="findIndex(array $array, callable $predicate): ?int" start="394" end="407" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="groupBy" signature="groupBy(array $array, callable $callback): array" start="415" end="425" crap="2" executable="5" executed="5" coverage="100"/>
      <method name="partition" signature="partition(array $array, callable $predicate): array" start="433" end="447" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="first" signature="first(array $array): mixed" start="453" end="460" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="last" signature="last(array $array): mixed" start="466" end="473" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="take" signature="take(array $array, int $count): array" start="480" end="492" crap="2" executable="8" executed="8" coverage="100"/>
      <method name="skip" signature="skip(array $array, int $count): array" start="499" end="511" crap="2" executable="8" executed="8" coverage="100"/>
      <method name="takeWhile" signature="takeWhile(array $array, callable $predicate): array" start="519" end="532" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="skipWhile" signature="skipWhile(array $array, callable $predicate): array" start="540" end="555" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="diffKeys" signature="diffKeys(array $array1, array $array2): array" start="562" end="565" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isEmpty" signature="isEmpty(array $array): bool" start="570" end="573" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isNotEmpty" signature="isNotEmpty(array $array): bool" start="578" end="581" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="count" signature="count(array $array): int" start="586" end="589" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="42">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_filters_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_filters_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_filters_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_filters_array#3"/>
      </line>
      <line nr="54">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_maps_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_maps_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_maps_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_maps_array#3"/>
      </line>
      <line nr="67">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reduces_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reduces_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reduces_array#2"/>
      </line>
      <line nr="77">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_duplicates#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_duplicates#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_duplicates#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_duplicates#3"/>
      </line>
      <line nr="87">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reverses_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reverses_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reverses_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_reverses_array#3"/>
      </line>
      <line nr="95">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="96">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="97">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="98">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="99">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="104">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="105">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="108">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="110">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="111">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="112">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="113">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="114">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="121">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flattens_array#2"/>
      </line>
      <line nr="131">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="132">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="133">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="134">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="135">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="140">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunks_array#3"/>
      </line>
      <line nr="150">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_slices_array#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_slices_array#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_slices_array#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_slices_array#3"/>
      </line>
      <line nr="160">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_merges_arrays#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_merges_arrays#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_merges_arrays#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_merges_arrays#3"/>
      </line>
      <line nr="171">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_diff#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_diff#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_diff#2"/>
      </line>
      <line nr="182">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_intersect#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_intersect#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_computes_intersect#2"/>
      </line>
      <line nr="191">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_keys"/>
      </line>
      <line nr="201">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_values"/>
      </line>
      <line nr="211">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="212">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="213">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="214">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="215">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="216">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="221">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#1"/>
      </line>
      <line nr="222">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#1"/>
      </line>
      <line nr="225">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combines_arrays#0"/>
      </line>
      <line nr="234">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flips_array"/>
      </line>
      <line nr="242">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_key_exists#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_key_exists#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_key_exists#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_key_exists#3"/>
      </line>
      <line nr="252">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_value_exists#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_value_exists#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_value_exists#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_value_exists#3"/>
      </line>
      <line nr="260">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_value#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_value#2"/>
      </line>
      <line nr="269">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sets_value"/>
      </line>
      <line nr="271">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sets_value"/>
      </line>
      <line nr="280">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_value"/>
      </line>
      <line nr="282">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_removes_value"/>
      </line>
      <line nr="290">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_plucks_column"/>
      </line>
      <line nr="301">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_with_comparator"/>
      </line>
      <line nr="303">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_with_comparator"/>
      </line>
      <line nr="313">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_ascending"/>
      </line>
      <line nr="315">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_ascending"/>
      </line>
      <line nr="325">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_descending"/>
      </line>
      <line nr="327">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_descending"/>
      </line>
      <line nr="336">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_by_keys"/>
      </line>
      <line nr="338">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_sorts_by_keys"/>
      </line>
      <line nr="348">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#2"/>
      </line>
      <line nr="349">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#1"/>
      </line>
      <line nr="350">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#1"/>
      </line>
      <line nr="354">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_every#2"/>
      </line>
      <line nr="364">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#2"/>
      </line>
      <line nr="365">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#1"/>
      </line>
      <line nr="366">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#0"/>
      </line>
      <line nr="370">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_some#2"/>
      </line>
      <line nr="380">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#2"/>
      </line>
      <line nr="381">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#1"/>
      </line>
      <line nr="382">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#0"/>
      </line>
      <line nr="386">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_item#2"/>
      </line>
      <line nr="396">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#2"/>
      </line>
      <line nr="398">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#2"/>
      </line>
      <line nr="399">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#1"/>
      </line>
      <line nr="400">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#0"/>
      </line>
      <line nr="403">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#1"/>
      </line>
      <line nr="406">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_finds_index#2"/>
      </line>
      <line nr="417">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_groups_by"/>
      </line>
      <line nr="419">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_groups_by"/>
      </line>
      <line nr="420">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_groups_by"/>
      </line>
      <line nr="421">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_groups_by"/>
      </line>
      <line nr="424">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_groups_by"/>
      </line>
      <line nr="435">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="436">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="438">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="439">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="440">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="442">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="446">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_partitions"/>
      </line>
      <line nr="455">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#2"/>
      </line>
      <line nr="456">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#2"/>
      </line>
      <line nr="459">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_first#1"/>
      </line>
      <line nr="468">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#2"/>
      </line>
      <line nr="469">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#2"/>
      </line>
      <line nr="472">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_gets_last#1"/>
      </line>
      <line nr="482">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="483">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="484">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="485">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="486">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="491">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_items#2"/>
      </line>
      <line nr="501">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="502">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="503">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="504">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="505">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="510">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_items#2"/>
      </line>
      <line nr="521">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="523">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="524">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="525">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="528">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="531">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_takes_while"/>
      </line>
      <line nr="542">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="543">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="545">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="546">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="547">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="550">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="551">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="554">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skips_while"/>
      </line>
      <line nr="564">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_diffs_keys"/>
      </line>
      <line nr="572">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_empty#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_empty#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_empty#2"/>
      </line>
      <line nr="580">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_not_empty#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_not_empty#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_checks_is_not_empty#2"/>
      </line>
      <line nr="588">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_counts_items#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_counts_items#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_counts_items#2"/>
      </line>
      <line nr="101">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="100">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_flatten_rejects_invalid_depth"/>
      </line>
      <line nr="137">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="136">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_chunk_rejects_invalid_size"/>
      </line>
      <line nr="218">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="217">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_combine_rejects_mismatched_lengths"/>
      </line>
      <line nr="488">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="487">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_take_rejects_negative_count"/>
      </line>
      <line nr="507">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
      <line nr="506">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\DataTransformer\DataTransformer24Test::test_skip_rejects_negative_count"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infection\BenchmarkSource\AutoGenerated\DataTransformer</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_chunk</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_column</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_combine</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_diff</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_diff_key</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_flip</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_intersect</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reduce</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reverse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_unique</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reset</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sort</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">usort</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DataTransformer24</token>
      </line>
      <line no="33">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @template TInput</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @template TOutput</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param array&lt;TInput&gt; $array</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @param callable(TInput): TOutput $callback</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @return array&lt;TOutput&gt;</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * @template TCarry</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @param callable(TCarry, T): TCarry $callback</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @param TCarry $initial</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * @return TCarry</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reduce</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$initial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reduce</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$initial</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">unique</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_unique</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reverse</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $array</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">flatten</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Depth must be at least 1, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103"/>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="107"/>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$flattened</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">flatten</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$depth</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$flattened</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="120"/>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="125">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="126">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="127">
        <token name="T_DOC_COMMENT">     * @return array&lt;array&lt;T&gt;&gt;</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$size</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$size</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Chunk size must be at least 1, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$size</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="139"/>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_chunk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$size</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="142"/>
      <line no="143">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="144">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="145">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="146">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="147">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$offset</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$length</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; ...$arrays</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$arrays</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$arrays</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="162"/>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array1</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array2</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">diff</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_diff</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="173"/>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="175">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array1</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array2</token>
      </line>
      <line no="178">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">intersect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_intersect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="184"/>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     * @return list&lt;string|int&gt;</token>
      </line>
      <line no="188">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="195">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="196">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed, T&gt; $array</token>
      </line>
      <line no="197">
        <token name="T_DOC_COMMENT">     * @return list&lt;T&gt;</token>
      </line>
      <line no="198">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_values</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="203"/>
      <line no="204">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int&gt; $keys</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $values</token>
      </line>
      <line no="207">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int, mixed&gt;</token>
      </line>
      <line no="208">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">combine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Keys and values arrays must have the same length. Got %d keys and %d values.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="220"/>
      <line no="221">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="224"/>
      <line no="225">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_combine</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$keys</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="227"/>
      <line no="228">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="229">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="230">
        <token name="T_DOC_COMMENT">     * @return array&lt;mixed, string|int&gt;</token>
      </line>
      <line no="231">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">flip</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_flip</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236"/>
      <line no="237">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="238">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="239">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244"/>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="246">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="247">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="248">
        <token name="T_DOC_COMMENT">     * @param T $value</token>
      </line>
      <line no="249">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">contains</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="254"/>
      <line no="255">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="256">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="257">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="262"/>
      <line no="263">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="264">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int, mixed&gt;</token>
      </line>
      <line no="266">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">set</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="270"/>
      <line no="271">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="273"/>
      <line no="274">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="275">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="276">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int, mixed&gt;</token>
      </line>
      <line no="277">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="278">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">remove</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">        </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="281"/>
      <line no="282">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="284"/>
      <line no="285">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="286">
        <token name="T_DOC_COMMENT">     * @param array&lt;array&lt;string|int, mixed&gt;&gt; $array</token>
      </line>
      <line no="287">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pluck</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_PIPE">|</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$column</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_column</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$column</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="292"/>
      <line no="293">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="294">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="295">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="296">
        <token name="T_DOC_COMMENT">     * @param callable(T, T): int $comparator</token>
      </line>
      <line no="297">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="298">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comparator</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">usort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$comparator</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="302"/>
      <line no="303">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="305"/>
      <line no="306">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="307">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="308">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="309">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="310">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sortAscending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">sort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="314"/>
      <line no="315">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="317"/>
      <line no="318">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="319">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="320">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="321">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="322">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sortDescending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">rsort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="326"/>
      <line no="327">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="329"/>
      <line no="330">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="331">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array</token>
      </line>
      <line no="332">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int, mixed&gt;</token>
      </line>
      <line no="333">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sortByKeys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="335">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="336">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ksort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="337"/>
      <line no="338">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="339">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="340"/>
      <line no="341">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="342">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="343">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="344">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="345">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">every</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="347">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="350">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="351">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="353"/>
      <line no="354">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="356"/>
      <line no="357">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="358">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="359">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="360">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="361">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">some</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="363">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="364">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="367">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="368">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="369"/>
      <line no="370">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="372"/>
      <line no="373">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="374">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="375">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="376">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="377">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="378">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="379">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="380">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="382">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="383">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="384">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="385"/>
      <line no="386">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="388"/>
      <line no="389">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="390">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="391">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="392">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="393">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="394">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findIndex</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">int</token>
      </line>
      <line no="395">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="397"/>
      <line no="398">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="402"/>
      <line no="403">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$index</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="405"/>
      <line no="406">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="408"/>
      <line no="409">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="410">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="411">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="412">
        <token name="T_DOC_COMMENT">     * @param callable(T): mixed $callback</token>
      </line>
      <line no="413">
        <token name="T_DOC_COMMENT">     * @return array&lt;array&lt;T&gt;&gt;</token>
      </line>
      <line no="414">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">groupBy</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="417">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$groups</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="418"/>
      <line no="419">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="420">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$groups</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="422">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="423"/>
      <line no="424">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$groups</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="425">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="426"/>
      <line no="427">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="428">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="429">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="430">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="431">
        <token name="T_DOC_COMMENT">     * @return array{0: array&lt;T&gt;, 1: array&lt;T&gt;}</token>
      </line>
      <line no="432">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="433">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">partition</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="435">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$pass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="436">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$fail</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="437"/>
      <line no="438">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="440">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$pass</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="441">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="442">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$fail</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="443">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="444">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="445"/>
      <line no="446">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$pass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fail</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="447">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="448"/>
      <line no="449">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="450">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="451">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="452">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="453">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="454">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="455">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="456">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="457">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="458"/>
      <line no="459">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="460">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="461"/>
      <line no="462">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="463">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="464">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="465">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="466">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">last</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
      </line>
      <line no="467">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="468">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="469">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="470">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="471"/>
      <line no="472">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">end</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="473">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="474"/>
      <line no="475">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="476">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="477">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="478">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="479">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="480">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">take</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="481">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="482">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="483">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="484">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="485">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Count must be non-negative, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="486">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="487">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="488">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="489">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="490"/>
      <line no="491">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="492">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="493"/>
      <line no="494">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="495">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="496">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="497">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="498">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="499">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">skip</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="500">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="501">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="502">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="503">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="504">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Count must be non-negative, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="505">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="506">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="507">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="508">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="509"/>
      <line no="510">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_slice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="511">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="512"/>
      <line no="513">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="514">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="515">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="516">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="517">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="518">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="519">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">takeWhile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="520">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="521">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="522"/>
      <line no="523">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="524">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="525">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="526">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="527"/>
      <line no="528">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="529">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="530"/>
      <line no="531">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="532">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="533"/>
      <line no="534">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="535">
        <token name="T_DOC_COMMENT">     * @template T</token>
      </line>
      <line no="536">
        <token name="T_DOC_COMMENT">     * @param array&lt;T&gt; $array</token>
      </line>
      <line no="537">
        <token name="T_DOC_COMMENT">     * @param callable(T): bool $predicate</token>
      </line>
      <line no="538">
        <token name="T_DOC_COMMENT">     * @return array&lt;T&gt;</token>
      </line>
      <line no="539">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="540">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">skipWhile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CALLABLE">callable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="541">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="542">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$skipping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="543">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="544"/>
      <line no="545">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="546">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$skipping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$predicate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="547">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="548">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="549"/>
      <line no="550">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$skipping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="551">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$item</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="552">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="553"/>
      <line no="554">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="555">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="556"/>
      <line no="557">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="558">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array1</token>
      </line>
      <line no="559">
        <token name="T_DOC_COMMENT">     * @param array&lt;string|int, mixed&gt; $array2</token>
      </line>
      <line no="560">
        <token name="T_DOC_COMMENT">     * @return array&lt;string|int, mixed&gt;</token>
      </line>
      <line no="561">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="562">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">diffKeys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="563">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="564">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_diff_key</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array1</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="565">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="566"/>
      <line no="567">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="568">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $array</token>
      </line>
      <line no="569">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="570">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="571">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="572">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="573">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="574"/>
      <line no="575">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="576">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $array</token>
      </line>
      <line no="577">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="578">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isNotEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="579">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="580">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="581">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="582"/>
      <line no="583">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="584">
        <token name="T_DOC_COMMENT">     * @param array&lt;mixed&gt; $array</token>
      </line>
      <line no="585">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="586">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="587">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="588">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="589">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="590">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="591"/>
    </source>
  </file>
</phpunit>
