<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Calculator26.php" path="/AutoGenerated/Calculator">
    <totals>
      <lines total="453" comments="27" code="426" executable="170" executed="151" percent="88.82"/>
      <methods count="37" tested="30" percent="81.08"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Infection\BenchmarkSource\AutoGenerated\Calculator\Calculator26" start="22" executable="170" executed="151" crap="82.85">
      <namespace name="Infection\BenchmarkSource\AutoGenerated\Calculator"/>
      <method name="add" signature="add(float $a, float $b): float" start="29" end="32" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="subtract" signature="subtract(float $a, float $b): float" start="34" end="37" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="multiply" signature="multiply(float $a, float $b): float" start="39" end="42" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="divide" signature="divide(float $a, float $b): float" start="44" end="51" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="modulo" signature="modulo(int $a, int $b): int" start="53" end="60" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="power" signature="power(float $base, float $exponent): float" start="62" end="77" crap="6.09" executable="10" executed="3" coverage="30"/>
      <method name="squareRoot" signature="squareRoot(float $number): float" start="79" end="91" crap="2" executable="8" executed="8" coverage="100"/>
      <method name="absolute" signature="absolute(float $number): float" start="93" end="96" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="negate" signature="negate(float $number): float" start="98" end="101" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="round" signature="round(float $number, int $precision): float" start="103" end="115" crap="2" executable="8" executed="8" coverage="100"/>
      <method name="ceil" signature="ceil(float $number): float" start="117" end="120" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="floor" signature="floor(float $number): float" start="122" end="125" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="percentage" signature="percentage(float $value, float $percentage): float" start="127" end="130" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="percentageOf" signature="percentageOf(float $part, float $whole): float" start="132" end="139" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="factorial" signature="factorial(int $n): float" start="141" end="173" crap="7.33" executable="21" executed="14" coverage="66.666666666667"/>
      <method name="fibonacci" signature="fibonacci(int $n): int" start="175" end="204" crap="5" executable="18" executed="18" coverage="100"/>
      <method name="gcd" signature="gcd(int $a, int $b): int" start="206" end="218" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="lcm" signature="lcm(int $a, int $b): int" start="220" end="229" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="isPrime" signature="isPrime(int $number): bool" start="231" end="254" crap="6.03" executable="11" executed="10" coverage="90.909090909091"/>
      <method name="isEven" signature="isEven(int $number): bool" start="256" end="259" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="isOdd" signature="isOdd(int $number): bool" start="261" end="264" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="sum" signature="sum(array $numbers): float" start="269" end="276" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="product" signature="product(array $numbers): float" start="281" end="288" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="average" signature="average(array $numbers): float" start="293" end="302" crap="2" executable="4" executed="4" coverage="100"/>
      <method name="median" signature="median(array $numbers): float" start="307" end="325" crap="3" executable="9" executed="9" coverage="100"/>
      <method name="min" signature="min(array $numbers): float" start="330" end="337" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="max" signature="max(array $numbers): float" start="342" end="349" crap="2" executable="3" executed="3" coverage="100"/>
      <method name="range" signature="range(array $numbers): float" start="354" end="361" crap="2.15" executable="3" executed="2" coverage="66.666666666667"/>
      <method name="variance" signature="variance(array $numbers): float" start="366" end="381" crap="2.01" executable="9" executed="8" coverage="88.888888888889"/>
      <method name="standardDeviation" signature="standardDeviation(array $numbers): float" start="386" end="389" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clamp" signature="clamp(float $value, float $min, float $max): float" start="391" end="412" crap="4" executable="13" executed="13" coverage="100"/>
      <method name="lerp" signature="lerp(float $start, float $end, float $t): float" start="414" end="426" crap="3" executable="8" executed="8" coverage="100"/>
      <method name="storeInMemory" signature="storeInMemory(float $value): void" start="428" end="431" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="recallFromMemory" signature="recallFromMemory(): float" start="433" end="436" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="clearMemory" signature="clearMemory(): void" start="438" end="441" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addToMemory" signature="addToMemory(float $value): void" start="443" end="446" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="subtractFromMemory" signature="subtractFromMemory(float $value): void" start="448" end="451" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="31">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_adds_numbers#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_adds_numbers#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_adds_numbers#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_adds_numbers#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_adds_numbers#4"/>
      </line>
      <line nr="36">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_subtracts_numbers#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_subtracts_numbers#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_subtracts_numbers#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_subtracts_numbers#3"/>
      </line>
      <line nr="41">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_multiplies_numbers#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_multiplies_numbers#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_multiplies_numbers#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_multiplies_numbers#3"/>
      </line>
      <line nr="46">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_division_by_zero_throws_exception"/>
      </line>
      <line nr="47">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_division_by_zero_throws_exception"/>
      </line>
      <line nr="50">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_divides_numbers#3"/>
      </line>
      <line nr="55">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_modulo_by_zero_throws_exception"/>
      </line>
      <line nr="56">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_modulo_by_zero_throws_exception"/>
      </line>
      <line nr="59">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_modulo#3"/>
      </line>
      <line nr="64">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#4"/>
      </line>
      <line nr="66">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#4"/>
      </line>
      <line nr="76">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_power#4"/>
      </line>
      <line nr="81">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="82">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="83">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="84">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="85">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="90">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_square_root#4"/>
      </line>
      <line nr="95">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_absolute_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_absolute_value#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_absolute_value#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_absolute_value#3"/>
      </line>
      <line nr="100">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_negates_number#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_negates_number#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_negates_number#2"/>
      </line>
      <line nr="105">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="106">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="107">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="108">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="109">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="114">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_rounds_number#3"/>
      </line>
      <line nr="129">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage#2"/>
      </line>
      <line nr="134">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_percentage_of_zero_throws_exception"/>
      </line>
      <line nr="135">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_percentage_of_zero_throws_exception"/>
      </line>
      <line nr="138">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_percentage_of#2"/>
      </line>
      <line nr="143">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="144">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="145">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="146">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="147">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="152">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="162">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="163">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#1"/>
      </line>
      <line nr="166">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="168">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="169">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="172">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_factorial#3"/>
      </line>
      <line nr="177">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="178">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="179">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="180">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="181">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="186">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="187">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#0"/>
      </line>
      <line nr="190">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="191">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#1"/>
      </line>
      <line nr="194">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="195">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="197">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="198">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="199">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="200">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="203">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_fibonacci#5"/>
      </line>
      <line nr="208">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="209">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="211">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="212">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="213">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="214">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="217">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_gcd#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="222">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#3"/>
      </line>
      <line nr="223">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#3"/>
      </line>
      <line nr="226">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="228">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_lcm#2"/>
      </line>
      <line nr="233">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#4"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#5"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#6"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#7"/>
      </line>
      <line nr="234">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#5"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#6"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#7"/>
      </line>
      <line nr="237">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#4"/>
      </line>
      <line nr="238">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#0"/>
      </line>
      <line nr="241">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#4"/>
      </line>
      <line nr="242">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#4"/>
      </line>
      <line nr="245">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
      </line>
      <line nr="247">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
      </line>
      <line nr="248">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
      </line>
      <line nr="253">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_prime#3"/>
      </line>
      <line nr="258">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_even#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_even#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_even#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_even#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_even#4"/>
      </line>
      <line nr="263">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_odd#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_odd#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_odd#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_odd#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_checks_if_odd#4"/>
      </line>
      <line nr="271">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="272">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#2"/>
      </line>
      <line nr="275">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_sum#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="283">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#3"/>
      </line>
      <line nr="284">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#2"/>
      </line>
      <line nr="287">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_product#3"/>
      </line>
      <line nr="295">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_average_of_empty_array_throws_exception"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="297">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_average_of_empty_array_throws_exception"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="298">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_average_of_empty_array_throws_exception"/>
      </line>
      <line nr="301">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_average#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="309">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_median_of_empty_array_throws_exception"/>
      </line>
      <line nr="311">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_median_of_empty_array_throws_exception"/>
      </line>
      <line nr="312">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_median_of_empty_array_throws_exception"/>
      </line>
      <line nr="315">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
      </line>
      <line nr="316">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
      </line>
      <line nr="318">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
      </line>
      <line nr="320">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
      </line>
      <line nr="321">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#1"/>
      </line>
      <line nr="324">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_median#3"/>
      </line>
      <line nr="332">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_min_of_empty_array_throws_exception"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="333">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_min_of_empty_array_throws_exception"/>
      </line>
      <line nr="336">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_minimum#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="344">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_max_of_empty_array_throws_exception"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="345">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_max_of_empty_array_throws_exception"/>
      </line>
      <line nr="348">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_finds_maximum#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="356">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="360">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_range#2"/>
      </line>
      <line nr="368">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="370">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="374">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="375">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="376">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="377">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="380">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="388">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="393">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="394">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="395">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="396">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="397">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="398">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="403">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#3"/>
      </line>
      <line nr="404">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#1"/>
      </line>
      <line nr="407">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#3"/>
      </line>
      <line nr="408">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#2"/>
      </line>
      <line nr="411">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamps_value#3"/>
      </line>
      <line nr="416">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#3"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="417">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="418">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="419">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="420">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="425">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#2"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_interpolates_linearly#3"/>
      </line>
      <line nr="430">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_memory_operations"/>
      </line>
      <line nr="435">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_memory_operations"/>
      </line>
      <line nr="440">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_memory_operations"/>
      </line>
      <line nr="445">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_memory_operations"/>
      </line>
      <line nr="450">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_memory_operations"/>
      </line>
      <line nr="87">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="86">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_square_root_of_negative_throws_exception"/>
      </line>
      <line nr="111">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="110">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_round_rejects_negative_precision"/>
      </line>
      <line nr="149">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="148">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_factorial_of_negative_throws_exception"/>
      </line>
      <line nr="183">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="182">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_fibonacci_of_negative_throws_exception"/>
      </line>
      <line nr="378">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_variance#1"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#0"/>
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_calculates_standard_deviation#1"/>
      </line>
      <line nr="400">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="399">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_clamp_rejects_invalid_range"/>
      </line>
      <line nr="422">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
      <line nr="421">
        <covered by="Infection\BenchmarkSource\Test\AutoGenerated\Calculator\Calculator26Test::test_lerp_rejects_invalid_factor"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infection\BenchmarkSource\AutoGenerated\Calculator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DivisionByZeroError</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_product</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_reduce</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_sum</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">min</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pow</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">round</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sqrt</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Calculator26</token>
      </line>
      <line no="23">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PRECISION</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">10</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MAX_FACTORIAL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">170</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26"/>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$memory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">add</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="33"/>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">subtract</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">multiply</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">divide</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DivisionByZeroError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Division by zero is not allowed.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">modulo</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DivisionByZeroError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Modulo by zero is not allowed.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">power</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$base</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exponent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pow</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$base</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exponent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_finite</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid power operation: %f ^ %f'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$base</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$exponent</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">squareRoot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate square root of negative number: %f'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sqrt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">absolute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="97"/>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">negate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="102"/>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">round</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$precision</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$precision</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Precision must be non-negative, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$precision</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">round</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$precision</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ceil</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ceil</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="121"/>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">floor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">floor</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">percentage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$percentage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$percentage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">100.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="131"/>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">percentageOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$part</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$whole</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$whole</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DivisionByZeroError</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate percentage of zero.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="137"/>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$part</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$whole</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">100.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140"/>
      <line no="141">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">factorial</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Factorial is not defined for negative numbers, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="151"/>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MAX_FACTORIAL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Factorial is too large to calculate, maximum is %d, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MAX_FACTORIAL</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="161"/>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">1.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="165"/>
      <line no="166">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">1.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167"/>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MUL_EQUAL">*=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="171"/>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174"/>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">fibonacci</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Fibonacci is not defined for negative numbers, got %d.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185"/>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="189"/>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196"/>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$temp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$temp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="202"/>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="205"/>
      <line no="206">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gcd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210"/>
      <line no="211">
        <token name="T_WHITESPACE">        </token>
        <token name="T_WHILE">while</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$temp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$temp</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216"/>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="219"/>
      <line no="220">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lcm</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="225"/>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$gcd</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">gcd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="227"/>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">abs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$a</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$b</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$gcd</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="230"/>
      <line no="231">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isPrime</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236"/>
      <line no="237">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="240"/>
      <line no="241">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244"/>
      <line no="245">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sqrt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sqrt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246"/>
      <line no="247">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sqrt</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="255"/>
      <line no="256">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isEven</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="260"/>
      <line no="261">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isOdd</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$number</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="265"/>
      <line no="266">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="267">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="268">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274"/>
      <line no="275">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="277"/>
      <line no="278">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="279">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="280">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="281">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">product</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="282">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="286"/>
      <line no="287">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_product</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="289"/>
      <line no="290">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="291">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="292">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">average</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="294">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate average of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="300"/>
      <line no="301">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="303"/>
      <line no="304">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="305">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="306">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">median</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="310"/>
      <line no="311">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate median of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="314"/>
      <line no="315">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sorted</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">sort</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sorted</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="317"/>
      <line no="318">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$middle</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="319"/>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PERCENT">%</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sorted</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$middle</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sorted</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$middle</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">2.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="323"/>
      <line no="324">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sorted</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$middle</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="326"/>
      <line no="327">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="328">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="329">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">min</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot find minimum of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="335"/>
      <line no="336">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">min</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="337">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="338"/>
      <line no="339">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="340">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="341">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="342">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="344">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="345">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot find maximum of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="346">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="347"/>
      <line no="348">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="349">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="350"/>
      <line no="351">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="352">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="353">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="354">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">range</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="355">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="357">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate range of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="358">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="359"/>
      <line no="360">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">max</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">min</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="362"/>
      <line no="363">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="364">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="365">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">variance</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="367">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="368">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="369"/>
      <line no="370">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Cannot calculate variance of empty array.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="373"/>
      <line no="374">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$mean</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">average</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="375">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$squaredDiffs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_map</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="376">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FN">fn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">pow</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$n</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mean</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="377">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="378">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="379"/>
      <line no="380">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sum</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$squaredDiffs</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIV">/</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$count</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="382"/>
      <line no="383">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="384">
        <token name="T_DOC_COMMENT">     * @param list&lt;float&gt; $numbers</token>
      </line>
      <line no="385">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="386">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">standardDeviation</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="388">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sqrt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">variance</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$numbers</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="389">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="390"/>
      <line no="391">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clamp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="392">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="394">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="395">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="396">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Min value must be less than or equal to max value, got min=%f, max=%f.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="397">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="402"/>
      <line no="403">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$min</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="405">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="406"/>
      <line no="407">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$max</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="410"/>
      <line no="411">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="412">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="413"/>
      <line no="414">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lerp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$start</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$end</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">1.0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="417">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="418">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="419">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Interpolation factor must be between 0 and 1, got %f.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="420">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="422">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="423">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="424"/>
      <line no="425">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$start</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$end</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$start</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$t</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="426">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="427"/>
      <line no="428">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">storeInMemory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="429">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="430">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">memory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="431">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="432"/>
      <line no="433">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">recallFromMemory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="435">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">memory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="436">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="437"/>
      <line no="438">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">clearMemory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="440">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">memory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="441">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="442"/>
      <line no="443">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addToMemory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="444">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="445">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">memory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="446">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="447"/>
      <line no="448">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">subtractFromMemory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="449">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="450">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">memory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS_EQUAL">-=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="451">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="452">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="453"/>
    </source>
  </file>
</phpunit>
